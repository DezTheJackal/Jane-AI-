# 🎯 AI Assistant - Complete Usage Guide

A step-by-step guide to mastering your AI assistant.

---

## 📖 Table of Contents

1. [Getting Started](#getting-started)
2. [Basic Usage](#basic-usage)
3. [Voice Commands](#voice-commands)
4. [Text Commands](#text-commands)
5. [AI Conversations](#ai-conversations)
6. [Web Navigation](#web-navigation)
7. [Media Control](#media-control)
8. [Productivity Features](#productivity-features)
9. [Tips & Tricks](#tips--tricks)
10. [Common Workflows](#common-workflows)

---

## Getting Started

### First Launch

1. **Open Terminal/Command Prompt**
2. **Navigate to assistant directory:**
   ```bash
   cd /path/to/ai-assistant
   ```

3. **Launch the assistant:**
   ```bash
   # GUI Mode (Recommended for beginners)
   python ai_assistant.py
   
   # Terminal Mode (Faster, keyboard-friendly)
   python ai_assistant.py --terminal
   ```

### Initial Setup Checklist

- ✅ Python 3.7+ installed
- ✅ All dependencies installed (`setup.py` completed)
- ✅ Microphone connected and working
- ✅ Speakers/headphones connected
- ✅ Internet connection active
- ✅ OpenAI API key configured (optional but recommended)

---

## Basic Usage

### GUI Mode Interface

```
┌─────────────────────────────────────────────────┐
│  🤖 AI Assistant                                │
├─────────────────────────────────────────────────┤
│  ┌───────────────────────────────────────────┐ │
│  │  Conversation History                     │ │
│  │                                           │ │
│  │  👤 You: What time is it?                │ │
│  │  🤖 Assistant: The time is 3:45 PM       │ │
│  │                                           │ │
│  └───────────────────────────────────────────┘ │
├─────────────────────────────────────────────────┤
│  ┌───────────────────────────────────────────┐ │
│  │ Type your message here...                 │ │
│  └───────────────────────────────────────────┘ │
│  [Voice] [Send] [Clear] [Exit]                  │
└─────────────────────────────────────────────────┘
```

#### Button Functions

- **Voice**: Activate microphone for voice input
- **Send**: Submit your typed message (or press Enter)
- **Clear**: Clear conversation history
- **Exit**: Close the application

#### Keyboard Shortcuts

- `Enter` - Send message
- `Shift + Enter` - New line in message
- `Ctrl + L` - Clear screen
- `Ctrl + Q` or `Ctrl + W` - Exit

### Terminal Mode Interface

```
============================================================
🤖 AI ASSISTANT - Terminal Mode
============================================================

Commands:
  - Say 'listen' to use voice input
  - Type your questions directly
  - Say 'exit' to quit

============================================================

🤖 Good afternoon! I'm Assistant, your AI assistant. How can I help you?

👤 You: _
```

---

## Voice Commands

### Activating Voice Input

**GUI Mode:**
1. Click the "Voice" button
2. Wait for "🎤 Listening..." status
3. Speak your command
4. Wait for "🔄 Recognizing..." status

**Terminal Mode:**
1. Type: `listen`
2. Press Enter
3. Wait for "🎤 Listening..." prompt
4. Speak your command

### Voice Recognition Tips

#### ✅ DO:
- Speak clearly and at normal pace
- Minimize background noise
- Position microphone 6-12 inches from mouth
- Wait for "Listening..." before speaking
- Use simple, direct commands
- Pause briefly between words

#### ❌ DON'T:
- Shout or whisper
- Speak too fast
- Use very complex sentences
- Interrupt during recognition
- Have TV/music playing loudly

### Troubleshooting Voice Input

**"Could not understand audio":**
- Speak more clearly
- Reduce background noise
- Check microphone volume
- Try speaking slightly slower

**"Wait Timeout Error":**
- System didn't detect speech start
- Ensure microphone is working
- Speak louder or check mic sensitivity

**Recognition is slow:**
- Normal for first use (Google API initialization)
- Check internet connection speed
- Subsequent uses will be faster

---

## Text Commands

### Command Categories

#### 1. Information Queries

**Time:**
```
what time is it
tell me the time
what's the time
time please
```

**Date:**
```
what's the date
what day is it
today's date
tell me the date
```

#### 2. Web Searches

**General Search:**
```
search for [topic]
look up [topic]
find [topic]
google [topic]
```

**Examples:**
```
search for Python tutorials
look up weather forecast
find best restaurants nearby
google machine learning courses
```

#### 3. Website Navigation

**Direct Access:**
```
open google
open youtube
open github
open linkedin
open gmail
open twitter
open facebook
open reddit
```

**With Search:**
```
open google python tutorials
youtube cat videos
github react projects
```

#### 4. Wikipedia Queries

```
wikipedia [topic]
wiki [topic]
what is [topic]
tell me about [topic]
```

**Examples:**
```
wikipedia quantum computing
what is blockchain
tell me about Einstein
wiki python programming
```

#### 5. System Commands

```
exit / quit / bye / goodbye  - Close assistant
help - Show available commands
clear - Clear conversation history
status - Show system status
```

---

## AI Conversations

### Enabling AI Mode

1. **Configure OpenAI API:**
   ```bash
   python ai_assistant.py --config
   ```

2. **Enter your API key** when prompted

3. **Start chatting!** Ask anything:

### Conversation Types

#### 1. General Knowledge

```
👤 You: What is quantum computing?
🤖 Quantum computing uses quantum mechanical phenomena 
   like superposition and entanglement to perform 
   calculations that would be impossible for classical 
   computers...

👤 You: Give me an example
🤖 One example is Shor's algorithm, which can factor 
   large numbers exponentially faster than classical 
   algorithms...
```

#### 2. Creative Tasks

```
👤 You: Write a haiku about coding
🤖 Keys click through the night
   Debugging endless errors
   Coffee keeps me bright

👤 You: Now make it about AI
🤖 Neural nets awake
   Learning from data streams flow
   Intelligence grows
```

#### 3. Problem Solving

```
👤 You: Help me debug this Python error: 
       "IndexError: list index out of range"
🤖 This error occurs when you're trying to access 
   a list index that doesn't exist. Common causes:
   1. Empty list
   2. Index >= len(list)
   3. Negative index too large
   Would you like specific examples?
```

#### 4. Learning & Education

```
👤 You: Explain recursion simply
🤖 Recursion is when a function calls itself. Think 
   of it like a Russian nesting doll - each doll 
   contains a smaller version of itself, until you 
   reach the smallest doll (base case).

👤 You: Show me code
🤖 Here's a simple factorial example:
   def factorial(n):
       if n <= 1:  # base case
           return 1
       return n * factorial(n-1)  # recursive call
```

### Context Awareness

The assistant remembers your last 10 messages:

```
👤 You: My favorite color is blue
🤖 That's nice! Blue is a calming color.

👤 You: What's my favorite color?
🤖 You mentioned that your favorite color is blue!

👤 You: What goes well with it?
🤖 Blue pairs well with:
   - White (classic and clean)
   - Silver or gray (sophisticated)
   - Orange (complementary contrast)
```

### Best Practices for AI Chat

#### ✅ Effective Prompts:
```
"Explain [concept] in simple terms"
"Give me 5 examples of [topic]"
"Compare and contrast [A] and [B]"
"Write a [type] about [topic]"
"Help me understand why [question]"
```

#### ❌ Less Effective:
```
"Tell me everything about [broad topic]"
"Is this good?" (without context)
"What do you think?" (too vague)
```

---

## Web Navigation

### Google Search

**Basic Search:**
```
search for pizza recipes
google machine learning
find best laptops 2024
```

**Specific Queries:**
```
search for "exact phrase"
google weather Cape Town
find news about technology
```

### YouTube

**Open Homepage:**
```
open youtube
youtube
```

**Search Videos:**
```
youtube python tutorials
search youtube for cooking videos
youtube music relaxing
```

### Wikipedia

**Article Lookup:**
```
wikipedia Albert Einstein
wiki Python programming language
what is artificial intelligence
```

**Response Example:**
```
🤖 Searching Wikipedia...
🤖 According to Wikipedia: Albert Einstein was a 
   German-born theoretical physicist, widely held 
   to be one of the greatest and most influential 
   scientists of all time...
```

### Quick Site Access

Create shortcuts for frequent websites:

| Command | Opens |
|---------|-------|
| `open github` | GitHub.com |
| `open linkedin` | LinkedIn.com |
| `open gmail` | Gmail.com |
| `open twitter` | Twitter.com |
| `open facebook` | Facebook.com |
| `open reddit` | Reddit.com |

---

## Media Control

### Music Playback

**Setup:**
1. Create music directory: `~/AIAssistant/music/`
2. Add MP3/WAV files
3. Update config if using custom path

**Commands:**
```
play music
play song
start music
```

**Note:** Plays first song in directory. For specific songs:
```
play song on cloud [song name]
→ Opens SoundCloud search
```

### Video Playback

**Setup:**
1. Create videos directory: `~/AIAssistant/videos/`
2. Add MP4/AVI files
3. Configure path in settings

**Commands:**
```
play video
start video
```

### Streaming Services

**SoundCloud:**
```
play song on cloud
→ "tell me the song name!"
→ [speak or type song name]
→ Opens SoundCloud with search results
```

**YouTube Music:**
```
youtube [artist name] [song name]
youtube relaxing music
youtube top hits 2024
```

---

## Productivity Features

### Email Sending

**Command:**
```
send mail
send email
```

**Process:**
1. System prompts: "What should I say?"
2. Speak/type your message
3. Enter recipient email when prompted
4. Enter your email credentials
5. Email sent!

**Example:**
```
👤 You: send mail
🤖 What should I say?
👤 You: Meeting scheduled for tomorrow at 3 PM
📧 Enter recipient email: colleague@example.com
📧 Enter your email: you@gmail.com
🔒 Enter password: ********
🤖 Email has been sent successfully!
```

**Note:** For Gmail, use App Password instead of regular password.

### Application Launching

**VS Code:**
```
open vs code
open vscode
launch vs code
```

**Microsoft Teams:**
```
open teams
start teams
launch teams
```

**Command Prompt/Terminal:**
```
open command prompt
open terminal
open cmd
```

**Code Blocks:**
```
open code blocks
launch code blocks
```

### File Operations

**Open PDF:**
```
open pdf
→ Enter full path to PDF file
→ File opens in default PDF viewer
```

**Custom Paths:**
Edit configuration to set default directories for quick access.

---

## Tips & Tricks

### Efficiency Tips

#### 1. Use Keyboard Shortcuts
```
Enter → Send message (faster than clicking)
Shift+Enter → Multi-line input
Ctrl+L → Quick clear
```

#### 2. Terminal Mode for Speed
Terminal mode uses less resources and responds faster:
```bash
python ai_assistant.py --terminal
```

#### 3. Batch Commands
Chain related tasks:
```
open google machine learning
→ Opens Google search
→ Then ask AI: "explain the results"
```

#### 4. Context Continuation
Build on previous responses:
```
👤 You: Tell me about Python
🤖 [Explains Python]
👤 You: What about its history?
👤 You: Show me code examples
👤 You: Compare it to Java
```

### Power User Features

#### 1. Quick Search Syntax
```
g: [query] → Google search
yt: [query] → YouTube search
w: [query] → Wikipedia
```

#### 2. Config Tweaking
Optimize for your preferences:
```json
{
  "voice_rate": 200,  // Faster speech
  "auto_listen": true,  // Auto-activate mic
  "verbose_mode": false  // Less console output
}
```

#### 3. Custom Aliases
Add to config for shortcuts:
```json
{
  "aliases": {
    "mail": "open gmail",
    "code": "open vs code",
    "meet": "open teams"
  }
}
```

### Voice Recognition Optimization

#### 1. Train Your Environment
The system adapts to your voice and environment. Use it regularly for better accuracy.

#### 2. Noise Profile
```python
# Adjust in ai_assistant.py
self.recognizer.energy_threshold = 400  # Higher for noisy
self.recognizer.dynamic_energy_threshold = True  # Auto-adjust
```

#### 3. Alternative Recognition
If Google fails, try:
- Speaking slower
- Enunciating more
- Using simpler vocabulary
- Typing instead (faster anyway!)

### AI Conversation Tips

#### 1. Be Specific
```
❌ "Tell me about computers"
✅ "Explain the difference between RAM and ROM"
```

#### 2. Ask Follow-ups
```
👤 What is machine learning?
👤 Give me an example
👤 How is it used in healthcare?
```

#### 3. Request Format
```
"Explain in 3 bullet points"
"Give me a code example"
"Compare in table format"
"ELI5 (Explain Like I'm 5)"
```

#### 4. Save Tokens
Shorter queries = lower costs:
```
❌ "Could you please help me understand the concept of..."
✅ "Explain [concept]"
```

---

## Common Workflows

### Morning Routine

```python
1. Launch assistant
2. "What time is it?"
3. "What's today's date?"
4. "Search for today's news"
5. "Open gmail"
6. Check emails while AI summarizes news
```

### Research Workflow

```python
1. "Wikipedia [topic]" → Get overview
2. "Explain [specific concept]" → Detailed AI explanation
3. "Google [topic] research papers"
